@model TechInvMgmt.Models.Inventory
@inject TechInvMgmt.Data.ApplicationDbContext context

@{
    ViewData["Title"] = "Create";
    List<Part> parts = await TechInvMgmt.Data.PartDb.GetPartsAsync(context);
    List<Subinventory> subinventories = await TechInvMgmt.Data.SubinventoryDb.GetSubinvParts(context);
}
@if (TempData["Message"] != null)
{
    <div class="alert alert-danger alert-dismissible" role="alert">@TempData["Message"]<a asp-action="Index" asp-controller="Inventory">go to your Subinventory.</a></div>
}
<div class="justify-content-center" style="width:100%; text-align:center;">
    <h1>New</h1>
    <h4>Inventory</h4>
    <hr />
    <div class="row justify-content-center">
        <div class="col-md-4">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group invColor">
                    <label asp-for="SubinventoryId" class="control-label"></label>
                    <select asp-for="SubinventoryId" class="searchDropdown" id="selectSubinv" style="width:100%;">
                        <option selected disabled>Select Subinventory</option>
                        @foreach (Subinventory s in subinventories)
                        {
                            <option value="@s.SubinventoryId">@s.ToString()</option>
                        }
                    </select>
                    <span asp-validation-for="SubinventoryId" class="text-danger"></span>
                </div>
                <div class="form-group invColor">
                    <label asp-for="PartId" class="control-label"></label>
                    <select asp-for="PartId" class="searchDropdown" id="selectPartId" style="width:100%;">
                        <option selected disabled>Select Part</option>
                        @foreach (Part p in parts)
                        {
                            <option value="@p.PartId">@p.ToString()</option>
                        }
                    </select>
                    <span asp-validation-for="PartId" class="text-danger"></span>
                </div>
                <div class="form-group invColor">
                    <label asp-for="Quantity" class="control-label"></label>
                    <input asp-for="Quantity" class="form-control" style="text-align:center;opacity:0.85;" />
                    <span asp-validation-for="Quantity" class="text-danger"></span>
                </div>
                <div class="form-group" hidden>
                    <label asp-for="InventoryId" class="control-label"></label>
                    <input asp-for="InventoryId" class="form-control" id="invId" />
                    <span asp-validation-for="InventoryId" class="text-danger"></span>
                </div>
                <div>
                    <a class="hvr-icon-back hvr-shadow" style="width:7rem;height:5rem;border-radius:12px;border: 1px solid #000000;background-color:#afafaf;" asp-action="Index"><img class="fa fa-chevron-circle-left hvr-icon" src="/img/Back.png" style="height:75px;" /></a>
                    <input type="submit" value="Create" class="btn btn-primary btn-lg hvr-shadow" style="width:7rem;height:5rem;border-radius:12px;border: 1px solid #000000;background-color:#709e6f;" />
                </div>
            </form>
        </div>
    </div>
</div>
<script>

    document.body.style.backgroundImage = "url(/img/CementFloorbg.jpg)";
    document.body.style.backgroundPosition = "center";
    document.body.style.backgroundSize = "cover";

    // Auto-populate Subinventory input field w/ user's
    var subinv = document.getElementById("getSubInv").innerHTML;
    console.log(subinv + "L");
    var subinvList = document.getElementById("selectSubinv").querySelectorAll("option");
    console.log(subinvList);
    for (var i = 0; i < subinvList.length; i++) {
        console.log(subinvList[i].value + subinv);
        if (subinvList[i].value == subinv) {
            document.getElementById("selectSubinv").selectedIndex = i;
            break;
        }
    }
    console.log(document.getElementById("selectSubinv").selectedIndex);

    // Responsively update value of input field for model property: InventoryId
    document.getElementById("selectPartId").onchange = function () {
        document.getElementById("invId").value = document.getElementById("selectSubinv").value + document.getElementById("selectPartId").value;
    };
    document.getElementById("selectSubinv").onchange = function () {
        document.getElementById("invId").value = document.getElementById("selectSubinv").value + document.getElementById("selectPartId").value;
    };

</script>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }
