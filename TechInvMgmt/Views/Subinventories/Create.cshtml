@model TechInvMgmt.Models.Subinventory
@inject TechInvMgmt.Data.ApplicationDbContext context
@{
    ViewData["Title"] = "Create";
    List<Employee> employees = await TechInvMgmt.Data.EmployeeDb.GetEmployeesAsync(context);
}
<div class="justify-content-center" style="width:100%; text-align:center;">
    <h1>Create</h1>

    <h4>Subinventory</h4>
    <hr />
    <div class="row justify-content-center">
        <div class="col-md-4">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="SubinventoryId" class="control-label"></label>
                    <input asp-for="SubinventoryId" class="form-control" />
                    <span asp-validation-for="SubinventoryId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="EmployeeId" class="control-label"></label>
                    <select asp-for="EmployeeId" class="searchDropdown" id="selectEmployee" style="width:100%;">
                        <option selected disabled>Select Employee</option>
                        @foreach (Employee e in employees)
                        {
                            <option value="@e.Id">@e.ToString()</option>
                        }
                    </select>
                    <span asp-validation-for="EmployeeId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index">Back to List</a>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
